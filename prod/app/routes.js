angular.module("templateMaker").config(["$routeProvider", function ($routeProvider) {
        $routeProvider.when('/main', {
            template: "\n    <magic-header></magic-header>\n    <h1>{{templateList.length==0 ? \"Drag in your templates\" : \"Templates\"}}</h1>\n    <div>\n    <div ng-show=\"templateList.length>0\">\n    <div class=\"ui relaxed divided list\">\n      <div class=\"item\" ng-repeat=\"(key, item) in templateList track by $index\">\n        <i class=\"large file outline middle aligned icon\"></i>\n        <div class=\"content\">\n          <div class=\"header\">{{item.name}}</div>\n          <div class=\"description\">{{item.size}}</div>\n        </div>\n      </div>\n    </div>\n    </div>\n\n\n    <file-dropper ng-show=\"templateList.length==0\" ondrop=\"dropTemplateFiles()\" label=\"Drop files here\"></file-dropper>\n<br>\n<button class=\"ui button\" ng-if=\"templateList.length>0\" ng-click=\"blankSlate()\">Change templates</button>\n    <button class=\"ui button\" ng-click=\"templateLoaded()&&navigateTo('#/fields')\" ng-class=\"{disabled: templateList.length==0, primary: templateList.length>0}\">Continue</button>\n    </div>"
        })
            .when('/fields', {
            template: "\n    <magic-header></magic-header>\n    <h1>Fields</h1>\n    <div class=\"ui form\">\n      <div class=\"ui field\" ng-repeat=\"field in fields track by $index\">\n        <label>{{field.clean}}<span ng-if=\"field.required\">*</span></label>\n        <tpl-textarea ng-model=\"field.model\" field=\"field\" ng-change=\"updateFieldValue(field, field.model)\" ng-if=\"field.type=='textarea'\"></tpl-textarea>\n        <tpl-textbox ng-model=\"field.model\" field=\"field\" ng-change=\"updateFieldValue(field, field.model)\" ng-if=\"field.type=='text'\"></tpl-textbox>\n        <tpl-url ng-model=\"field.model\" field=\"field\" ng-change=\"updateFieldValue(field, field.model)\" ng-if=\"field.type=='url'\"></tpl-url>\n        <tpl-date ng-model=\"field.model\" field=\"field\" ng-change=\"updateFieldValue(field, field.model)\" ng-if=\"field.type=='date'\"/></tpl-date>\n        <tpl-repeat ng-model=\"field.model\" field=\"field\" ng-change=\"updateFieldValue(field, field.model)\" ng-if=\"field.type=='repeat'\"/></tpl-date>\n        </div>\n      </div><br>\n      <button ng-click=\"areAllFieldsCompleted()&&navigateTo('#/export')\" class=\"ui\" ng-class=\"{'disabled button': !areAllFieldsCompleted(), 'primary button':areAllFieldsCompleted()}\">Review and export</button>\n<div ng-show=\"fields.length>0\" style=\"padding-bottom:3em; padding-top:2em;\">\n      <div class=\"ui horizontal divider\">\n    Import saved field values\n  </div>\n  <p>If you have a field value file (*.JSON), you can drop it in the box below to update the above fields. You can create a field value file on the export page after you've filled out the fields above. </p>\n      <file-dropper label=\"Import Fields\" ondrop=\"dropImportFieldValues()\"></file-dropper></div>\n    "
        })
            .when('/export', {
            template: "\n    <magic-header></magic-header>\n    <h1>Export</h1>\n    <div ng-show=\"templateList.length==0\">\n      There are no templates to export.\n      </div>\n    <div ng-show=\"templateList.length>0\">\n    <div class=\"ui relaxed divided list\">\n      <div class=\"item\" ng-repeat=\"(key, item) in templateList track by $index\">\n      <div class=\"right floated content\">\n\n        <div class=\"ui buttons\">\n          <div class=\"ui button\" ng-click=\"exportDownloadSingleFile(item)\">Download</div>\n          <div class=\"ui simple dropdown icon button\">\n            <i class=\"dropdown icon\"></i>\n            <div class=\"menu\">\n              <div class=\"item\" ng-click=\"previewHTML(item)\">Open in browser</div>\n              </div>\n            </div>\n          </div>\n      </div>\n\n        <i class=\"large file outline middle aligned icon\"></i>\n        <div class=\"content\">\n          <div class=\"header\">{{item.name}}</div>\n          <div class=\"description\">{{item.size}}B</div>\n        </div>\n      </div>\n\n    <div class=\"item\">\n      <div class=\"right floated content\">\n        <button class=\"ui button\" ng-click=\"exportFields()\" >Download</button>\n      </div>\n\n        <i class=\"large text file outline middle aligned icon\"></i>\n        <div class=\"content\">\n          <div class=\"header\">Field values</div>\n          <div class=\"description\"></div>\n        </div>\n      </div>\n    </div>\n<br>\n<button class=\"ui button\" ng-click=\"exportAllTemplates()\">Download All</button>\n<button class=\"ui button\" ng-click=\"blankSlate()\">Start over</button>\n\n    </div>\n\n    "
        }).when('/help', {
            template: "\n    <h1>Help</h1>\n\n    <p>Variables have changed in the new version of template maker. The new format follows the pattern below:</p>\n\n    <pre>{{ variable_name | type: format }}</pre>\n\n    <p>For example:</p>\n    <pre>{{ webinar_date | date: \"longDate\" }}</pre>\n\n\n    <p>For text fields you can specify long text and regular text boxes:</p>\n    <pre>{{ webinar_title }}\n{{ webinar_description | textarea }}</pre>\n\n    <h2>Validation</h2>\n    <p>You can add a character count limitation to regular textboxes.</p>\n    <pre>{{ webinar_title | length: 45 }}</pre>\n\n    <p>You can add validation for a url by specifying a url type:</p>\n    <pre>{{ webinar_attendee_url | url }}</pre>\n    <p>These urls will have to be a URL in order for you to export the files.</p>\n\n\n    <h2>Date Formats</h2>\n    <p>One cool thing that you can do, is display the date in a more\n    customizable way. What you'll notice immediately is that\n    you can only specify a date in a rigid YYYY-MM-DD format. On the template\n    variable you can specify the month as either the standard date format,\n    or something more unique-- a couple examples:</p>\n    <table class=\"ui table\">\n    <thead><tr><th>Code</th><th>Renders</th></tr></thead>\n    <tr><td><code>{{ webinar_date | date: \"longDate\" }}</code></td><td> September 3, 2010</td></tr>\n    <tr><td><code>{{ webinar_date | date: \"fullDate\" }}</code></td><td> Friday, September 3, 2010</td></tr>\n    <tr><td><code>{{ webinar_date | date: \"MMMM\" }}</code></td><td> September</td></tr>\n    </table>\n\n\n    <h2>Loops</h2>\n    <p>Below is an example code for creating repeating blocks of variables. Notice how the variables inside a repeating block are wrapped with hashtags.</p>\n    <code><pre>\n    {{ webinar_speakers | repeat: `\n      ## speaker_name | length: 128 ## &lt;br/&gt;\n      ## job_title | length: 128 ## &lt;br/&gt;\n      ## description | length:128 ## &lt;br/&gt;\n\n    ` }}\n    </pre></code>\n\n    <div style=\"height: 50px;\"></div>\n    " })
            .otherwise({ redirectTo: "/main" });
    }]);
